name: 'docker-sign'
description: 'Sign docker images'
inputs:
  image-ref:
    description: 'The Docker image ref, example: imagename:tag'
    required: true
  private-key-id:
    description: 'The Docker private key id (hash)'
    required: true
  private-key:
    description: 'The Docker private key'
    required: true
  private-key-passphrase:
    description: 'The Docker private key passphrase'
    required: true
  private-key-name:
    description: 'The Docker private key name'
    required: false
  sign-manifest:
    description: 'Use docker notary and manifests'
    required: false
    default: false
  notary-server:
    description: 'The URL to the notary server'
    required: false
    default: 'https://notary.docker.io'
  notary-auth:
    description: 'The credentials in auth basic format'
    required: false


branding:
    icon: "feather"
    color: gray-dark

runs:
  using: "composite"
  steps:
    - run: mkdir -p ~/.docker/trust/private/
      shell: sh
    - run: echo "${{ inputs.private-key }}" > ~/.docker/trust/private/${{ inputs.private-key-id }}.key
      shell: sh
    - run: chmod 600 ~/.docker/trust/private/${{ inputs.private-key-id }}.key
      shell: sh
    - run: docker trust key load ~/.docker/trust/private/${{ inputs.private-key-id }}.key
      shell: sh
      env:
        DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: "${{ inputs.private-key-passphrase }}"
        DOCKER_CONTENT_TRUST: 1
    - run: |
        if [ "${SIGN_MANIFEST_MODE}" != "true" ]; then
            docker trust sign --local "${IMAGE_REF}";
        fi
      shell: sh
      env:
        DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: "${{ inputs.private-key-passphrase }}"
        DOCKER_CONTENT_TRUST: 1
        SIGN_MANIFEST_MODE: "${{ inputs.sign-manifest }}"
        IMAGE_REF: "${{ inputs.image-ref }}"
    - run: |
        if [ "${SIGN_MANIFEST_MODE}" = "true" ]; then
            ROLE_CLI='';
            if [ ! -z "${{ inputs.private-key-name }}" ]; then
                echo "Roles: targets/${{ inputs.private-key-name }}";
                ROLE_CLI="--roles \"targets/${{ inputs.private-key-name }}\""
            fi
            REF="$(echo "${IMAGE_REF}" | cut -d ':' -f 1)";
            TAG="$(echo "${IMAGE_REF}" | cut -d ':' -f 2)";
            notary key list -d ~/.docker/trust/
            SHA_256="$(docker manifest push "${IMAGE_REF}" --purge | cut -d ':' -f 2)";
            echo "Manifest SHA-256: ${SHA_256}";
            echo "Image-ref: ${REF}";
            echo "Image-tag ${TAG}";
            export NOTARY_AUTH="$(printf "${AUTH_BASIC}" | base64 -w0)";
            unset AUTH_BASIC;
            echo "Sign ${SHA_256} with the notary"
            notary -d ~/.docker/trust/ -s "${{ inputs.notary-server }}" addhash "${REF}" "${TAG}" 946 --sha256 "${SHA_256}" ${ROLE_CLI} --publish --verbose;
            echo "Done !"
            notary -s "${{ inputs.notary-server }}" list "${REF}";
            unset NOTARY_AUTH;
        fi
      shell: sh
      env:
        AUTH_BASIC: "${{ inputs.notary-auth }}"
        IMAGE_REF: "${{ inputs.image-ref }}"
        SIGN_MANIFEST_MODE: "${{ inputs.sign-manifest }}"
        DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: "${{ inputs.private-key-passphrase }}"
        NOTARY_DELEGATION_PASSPHRASE: "${{ inputs.private-key-passphrase }}"
        DOCKER_CONTENT_TRUST: 1
        DOCKER_CLI_EXPERIMENTAL: enabled
    - run: docker trust inspect --pretty "${{ inputs.image-ref }}"
      shell: sh
      env:
        DOCKER_CONTENT_TRUST: 1
    - run: rm ~/.docker/trust/private/${{ inputs.private-key-id }}.key
      shell: sh
    - run: rm -rf ~/.docker/trust/private
      shell: sh
